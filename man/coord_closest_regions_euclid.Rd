% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/closest_atlas_regions.R
\name{coord_closest_regions_euclid}
\alias{coord_closest_regions_euclid}
\title{Find closest regions to coordinate using Euclidean distance.}
\usage{
coord_closest_regions_euclid(brainparc, coordinate, linkage = "single")
}
\arguments{
\item{brainparc}{a brain parcellation, see functions like \code{\link{brainparc_fs}} to get one.}

\item{coordinate}{\code{nx3} numerical matrix or vector of length 3, the query point coordinates.}

\item{linkage}{character string, one of \code{"single"} or \code{"centroid"}. Defines how the distance from a vertex to a region of vertices is computed. \code{"single"}: Euclidean distance from query vertex to the closest vertex of the atlas region. \code{"centroid"}: Euclidean distance from query vertex to the mean of the vertex coordinates of the atlas region.}
}
\description{
Finds the closest atlas regions according to the brain surface parcellation 'brainparc' for the given query vertex coordinates. The coordinates must be in the surface space of the surface included in the 'brainparc'.
}
\note{
This is a wrapper around \code{\link{vertex_closest_regions_euclid}}. It first computes the surface vertex closest to the given coordinate (using \code{\link{coord_closest_vertex}}), then runs \code{\link{vertex_closest_regions_euclid}} with that vertices coordinates.
}
\examples{
\dontrun{
bp = brainparc_fs(fsbrain::fsaverage.path(), "fsaverage", atlas="aparc");
coord_closest_regions_euclid(bp, bp$surfaces$white$lh$vertices[1:3,]);
}


}
\seealso{
\code{\link{vertex_closest_regions_euclid}} is faster if you have a vertex index for the surface in 'brainparc' instead of a coordinate.
}
